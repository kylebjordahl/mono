{
  "version": 1,
  "projects": {
    "go": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/go",
      "sourceRoot": "apps/go/src",
      "prefix": "kylebjordahl",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/go",
            "index": "apps/go/src/index.html",
            "main": "apps/go/src/main.ts",
            "polyfills": "apps/go/src/polyfills.ts",
            "tsConfig": "apps/go/tsconfig.app.json",
            "aot": true,
            "assets": ["apps/go/src/favicon.ico", "apps/go/src/assets"],
            "styles": ["apps/go/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/go/src/environments/environment.ts",
                  "with": "apps/go/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "go:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "go:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "go:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/go/src/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/go/jest.config.js",
            "passWithNoTests": true
          }
        },
        "relay": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "node -e \"gun = (Gun = require('gun'))({web: require('http').createServer(Gun.serve(__dirname+'/.gun-relay')).listen(8765) })\""
          }
        }
      }
    },
    "go-e2e": {
      "root": "apps/go-e2e",
      "sourceRoot": "apps/go-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/go-e2e/cypress.json",
            "tsConfig": "apps/go-e2e/tsconfig.e2e.json",
            "devServerTarget": "go:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "go:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/go-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "holiday-lights": {
      "root": "apps/holiday-lights",
      "sourceRoot": "apps/holiday-lights/src",
      "projectType": "application",
      "prefix": "holiday-lights",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/holiday-lights",
            "main": "apps/holiday-lights/src/main.ts",
            "tsConfig": "apps/holiday-lights/tsconfig.app.json",
            "assets": ["apps/holiday-lights/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/holiday-lights/src/environments/environment.ts",
                  "with": "apps/holiday-lights/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "port": 9229,
            "buildTarget": "holiday-lights:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/holiday-lights/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/holiday-lights/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "welcome-to": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/welcome-to",
      "sourceRoot": "apps/welcome-to/src",
      "prefix": "kylebjordahl",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/welcome-to",
            "index": "apps/welcome-to/src/index.html",
            "main": "apps/welcome-to/src/main.ts",
            "polyfills": "apps/welcome-to/src/polyfills.ts",
            "tsConfig": "apps/welcome-to/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/welcome-to/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/welcome-to/src/styles.scss",
              {
                "input": "apps/welcome-to/src/theme/variables.scss"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/welcome-to/src/environments/environment.ts",
                  "with": "apps/welcome-to/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "welcome-to:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "welcome-to:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "welcome-to:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/welcome-to/src/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/welcome-to/jest.config.js",
            "passWithNoTests": true
          }
        },
        "cap": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "--help"
          }
        },
        "add": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "add",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "add ios"
            },
            "android": {
              "cmd": "add android"
            }
          }
        },
        "copy": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "copy",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "copy ios"
            },
            "android": {
              "cmd": "copy android"
            }
          }
        },
        "open": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "open",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "open ios"
            },
            "android": {
              "cmd": "open android"
            }
          }
        },
        "sync": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "sync",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "sync ios"
            },
            "android": {
              "cmd": "sync android"
            }
          }
        },
        "update": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "update",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "update ios"
            },
            "android": {
              "cmd": "update android"
            }
          }
        }
      }
    },
    "welcome-to-e2e": {
      "root": "apps/welcome-to-e2e",
      "sourceRoot": "apps/welcome-to-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/welcome-to-e2e/cypress.json",
            "tsConfig": "apps/welcome-to-e2e/tsconfig.e2e.json",
            "devServerTarget": "welcome-to:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "welcome-to:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/welcome-to-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "hours-chart": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/hours-chart",
      "sourceRoot": "apps/hours-chart/src",
      "prefix": "kylebjordahl",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/hours-chart",
            "index": "apps/hours-chart/src/index.html",
            "main": "apps/hours-chart/src/main.ts",
            "polyfills": "apps/hours-chart/src/polyfills.ts",
            "tsConfig": "apps/hours-chart/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/hours-chart/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/hours-chart/src/styles.scss",
              {
                "input": "apps/hours-chart/src/theme/variables.scss"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/hours-chart/src/environments/environment.ts",
                  "with": "apps/hours-chart/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "hours-chart:build",
            "proxyConfig": "apps/hours-chart/proxy.conf.json",
            "port": 5953,
            "host": "0.0.0.0"
          },
          "configurations": {
            "production": {
              "browserTarget": "hours-chart:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "hours-chart:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/hours-chart/tsconfig.app.json",
              "apps/hours-chart/tsconfig.editor.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/hours-chart/**/*"]
          }
        }
      }
    },
    "argus-client": {
      "projectType": "application",
      "schematics": {
        "@schematics/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/argus/client",
      "sourceRoot": "apps/argus/client/src",
      "prefix": "argus",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/argus/client",
            "index": "apps/argus/client/src/index.html",
            "main": "apps/argus/client/src/main.ts",
            "polyfills": "apps/argus/client/src/polyfills.ts",
            "tsConfig": "apps/argus/client/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/argus/client/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/argus/client/src/styles.scss",
              {
                "input": "apps/argus/client/src/theme/variables.scss"
              }
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/argus/client/src/environments/environment.ts",
                  "with": "apps/argus/client/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "argus-client:build",
            "port": 3456,
            "host": "0.0.0.0",
            "disableHostCheck": true,
            "ssl": true,
            "proxyConfig": "apps/argus/client/proxy.conf.json"
          },
          "configurations": {
            "production": {
              "browserTarget": "argus-client:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "argus-client:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/argus/client/tsconfig.app.json",
              "apps/argus/client/tsconfig.editor.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/argus/client/**/*"]
          }
        },
        "cap": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "--help"
          }
        },
        "add": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "add",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "add ios"
            },
            "android": {
              "cmd": "add android"
            }
          }
        },
        "copy": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "copy",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "copy ios"
            },
            "android": {
              "cmd": "copy android"
            }
          }
        },
        "open": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "open",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "open ios"
            },
            "android": {
              "cmd": "open android"
            }
          }
        },
        "sync": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "sync",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "sync ios"
            },
            "android": {
              "cmd": "sync android"
            }
          }
        },
        "update": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "update",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "update ios"
            },
            "android": {
              "cmd": "update android"
            }
          }
        }
      }
    },
    "argus/client-e2e": {
      "root": "apps/argus/client-e2e",
      "sourceRoot": "apps/argus/client-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/argus/client-e2e/cypress.json",
            "tsConfig": "apps/argus/client-e2e/tsconfig.e2e.json",
            "devServerTarget": "argus-client:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "argus-client:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/argus/client-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/argus/client-e2e/**/*"]
          }
        }
      }
    },
    "argus-domain": {
      "root": "libs/argus/domain",
      "sourceRoot": "libs/argus/domain/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/argus/domain/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/argus/domain/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "argus-scanner": {
      "root": "apps/argus/scanner",
      "sourceRoot": "apps/argus/scanner/src",
      "projectType": "application",
      "prefix": "argus-scanner",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/argus/scanner",
            "main": "apps/argus/scanner/src/main.ts",
            "tsConfig": "apps/argus/scanner/tsconfig.app.json",
            "assets": ["apps/argus/scanner/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/argus/scanner/src/environments/environment.ts",
                  "with": "apps/argus/scanner/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "port": 34566,
            "buildTarget": "argus-scanner:build",
            "args": [
              "-p",
              "test",
              "-r",
              "/Users/kyle/Desktop/scan-test",
              "-r",
              "/Users/kyle/Desktop/rcv-test",
              "--key",
              "2f6b65792f737761726d2f70736b2f312e302e302f0a2f6261736531362f0a63656438333630636631636235373430613934383930623638386232313434363664336132633633373938636165313663623239366638663061316565396135"
            ]
          },
          "configurations": {
            "second": {
              "args": [
                "-p",
                "test",
                "-r",
                "/Users/kyle/Desktop/rcv-test",
                "--key",
                "2f6b65792f737761726d2f70736b2f312e302e302f0a2f6261736531362f0a63656438333630636631636235373430613934383930623638386232313434363664336132633633373938636165313663623239366638663061316565396135"
              ]
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/argus/scanner/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/argus/scanner/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "argus-watchtower": {
      "root": "apps/argus/watchtower",
      "sourceRoot": "apps/argus/watchtower/src",
      "projectType": "application",
      "prefix": "argus-watchtower",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/argus/watchtower",
            "main": "apps/argus/watchtower/src/main.ts",
            "tsConfig": "apps/argus/watchtower/tsconfig.app.json",
            "assets": ["apps/argus/watchtower/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/argus/watchtower/src/environments/environment.ts",
                  "with": "apps/argus/watchtower/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "argus-watchtower:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/argus/watchtower/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/argus/watchtower/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "argus-watcher": {
      "root": "libs/argus/watcher",
      "sourceRoot": "libs/argus/watcher/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/argus/watcher/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/argus/watcher"],
          "options": {
            "jestConfig": "libs/argus/watcher/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "argus-watcher-cli": {
      "root": "apps/argus/watcher-cli",
      "sourceRoot": "apps/argus/watcher-cli/src",
      "projectType": "application",
      "prefix": "argus-scanner-nest",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/argus/watcher-cli",
            "main": "apps/argus/watcher-cli/src/main.ts",
            "tsConfig": "apps/argus/watcher-cli/tsconfig.app.json",
            "assets": ["apps/argus/watcher-cli/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/argus/watcher-cli/src/environments/environment.ts",
                  "with": "apps/argus/watcher-cli/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "argus-watcher-cli:build",
            "port": 34566
          },
          "configurations": {
            "kyle": {
              "args": [
                "listen",
                "--projectId=test",
                "--swarmKey=2f6b65792f737761726d2f70736b2f312e302e302f0a2f6261736531362f0a63656438333630636631636235373430613934383930623638386232313434363664336132633633373938636165313663623239366638663061316565396135",
                "/Users/kyle/Desktop/scan-test",
                "/Users/kyle/Desktop/rcv-test"
              ]
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/argus/watcher-cli/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/argus/watcher-cli/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "schematics": {
    "@nrwl/angular": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  },
  "defaultProject": "go"
}
